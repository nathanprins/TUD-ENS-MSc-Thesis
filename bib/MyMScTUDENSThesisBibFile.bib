@comment{

Important rules for typesetting bibliography:

- Consistency: __all__ references must be typeset following the same style. Therefore, if one reference lists all authors---all other must as well, if one reference lists address of the conference---all other conference publications must list it as well; if one conference is named by the abbreviation---all other must be as well (exception to the rule is when you cite a conference which is not well known), etc. 
- no et al.: please list __all___ authors of a publication
- time: typesetting clear and __complete__ reference file takes time (unfortunately). However, good presentation makes your thesis pleasant to read!
- abbreviate journal titles if possible: IEEE has a official list of IEEE journal abbreviations (http://ieeeauthorcenter.ieee.org/wp-content/uploads/Journal-Titles-and-Abbreviations.pdf) while ACM does; However you can quickly check on the ACM journal website what the official abbreviation is
- do not copy bibtex files blindly---typeset yourself: ACM- and IEEE-generated bibtex files contain many inconsistencies, therefore you would have to type these references yourself. Below you will find a reasonably good designed list of most popular reference types. Use them as a boilerplate and replace these fields from a bibfile you downloaded from the internet
- abbreviate months: bibtex can replace three letter month name with the right one---do not put these names in curly brackets 
- abbreviations in curly brackets: in titles abbreviations must be placed in curly brackets
- capitalize titles: always

}

@misc{arif_2021,
  author       = {{Arif, Rauf}},
  title        = {With an economic potential of \$11 trillion, internet of things is here to revolutionize global economy},
  year         = {2021},
  howpublished = {\url{https://www.forbes.com/sites/raufarif/2021/06/05/with-an-economic-potential-of-11-trillion-internet-of-things-is-here-to-revolutionize-global-economy/?sh=1f82f8015f29}},
  note         = {Last accessed: August 31st, 2022}
}

@misc{bluetooth_spec,
  author       = {{Bluetooth SIG}},
  title        = {Core Specification 5.3},
  year         = {2021},
  howpublished = {\url{https://www.bluetooth.com/specifications/specs/core-specification-5-3/}},
  note         = {Last accessed: September 1st, 2022}
}

@article{colin_2018,
  author     = {Colin, Alexei and Ruppel, Emily and Lucia, Brandon},
  title      = {A Reconfigurable Energy Storage Architecture for Energy-Harvesting Devices},
  year       = {2018},
  issue_date = {February 2018},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {53},
  number     = {2},
  issn       = {0362-1340},
  url        = {https://doi-org.tudelft.idm.oclc.org/10.1145/3296957.3173210},
  doi        = {10.1145/3296957.3173210},
  abstract   = {Battery-free, energy-harvesting devices operate using energy collected exclusively from their environment. Energy-harvesting devices allow maintenance-free deployment in extreme environments, but requires a power system to provide the right amount of energy when an application needs it. Existing systems must provision energy capacity statically based on an application's peak demand which compromises efficiency and responsiveness when not at peak demand. This work presents Capybara: a co-designed hardware/software power system with dynamically reconfigurable energy storage capacity that meets varied application energy demand. The Capybara software interface allows programmers to specify the energy mode of an application task. Capybara's runtime system reconfigures Capybara's hardware energy capacity to match application demand. Capybara also allows a programmer to write reactive application tasks that pre-allocate a burst of energy that it can spend in response to an asynchronous (e.g., external) event. We instantiated Capybara's hardware design in two EH devices and implemented three reactive sensing applications using its software interface. Capybara improves event detection accuracy by 2x-4x over statically-provisioned energy capacity, maintains response latency within 1.5x of a continuously-powered baseline, and enables reactive applications that are intractable with existing power systems.},
  journal    = {SIGPLAN Not.},
  month      = {mar},
  pages      = {767–781},
  numpages   = {15},
  keywords   = {intermittent computing, energy-harvesting power system, energy burst}
}

@inproceedings{freebie,
  author    = {de Winkel, Jasper and Tang, Haozhe and Pawe\l{}czak, Przemys\l{}aw},
  title     = {Intermittently-Powered Bluetooth That Works},
  year      = {2022},
  isbn      = {9781450391856},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi-org.tudelft.idm.oclc.org/10.1145/3498361.3538934},
  doi       = {10.1145/3498361.3538934},
  abstract  = {We present an architecture for intermittently-powered wireless communication systems that does not require any changes to the official protocol specification. Our core idea is to save the intermediate state of the wireless protocol to non-volatile memory within each connection interval. The protocol state is then deterministically restored at a predefined (harvested energy-dependent) time, which follows the connection interval. As a case study for our architecture, we introduce FreeBie: a battery-free intermittently-powered Bluetooth Low Energy (BLE) mote. To the best of our knowledge FreeBie is the first battery-free active wireless system that sustains bi-directional communication on intermittent harvested energy. The strength of our architecture is articulated by FreeBie consuming at least 9.5 times less power during device inactivity periods than a state-of-the-art BLE device.},
  booktitle = {Proceedings of the 20th Annual International Conference on Mobile Systems, Applications and Services},
  pages     = {287–301},
  numpages  = {15},
  keywords  = {battery-free, mobile networks, bluetooth, embedded systems, energy harvesting, intermittent computing},
  location  = {Portland, Oregon},
  series    = {MobiSys '22}
}

@article{gameboy,
  author     = {de Winkel, Jasper and Kortbeek, Vito and Hester, Josiah and Pawe\l{}czak, Przemys\l{}aw},
  title      = {Battery-Free Game Boy},
  year       = {2020},
  issue_date = {September 2020},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {4},
  number     = {3},
  url        = {https://doi-org.tudelft.idm.oclc.org/10.1145/3411839},
  doi        = {10.1145/3411839},
  abstract   = {We present ENGAGE, the first battery-free, personal mobile gaming device powered by energy harvested from the gamer actions and sunlight. Our design implements a power failure resilient Nintendo Game Boy emulator that can run off-the-shelf classic Game Boy games like Tetris or Super Mario Land. This emulator is capable of intermittent operation by tracking memory usage, avoiding the need for always checkpointing all volatile memory, and decouples the game loop from user interface mechanics allowing for restoration after power failure. We build custom hardware that harvests energy from gamer button presses and sunlight, and leverages a mixed volatility memory architecture for efficient intermittent emulation of game binaries. Beyond a fun toy, our design represents the first battery-free system design for continuous user attention despite frequent power failures caused by intermittent energy harvesting. We tackle key challenges in intermittent computing for interaction including seamless displays and dynamic incentive-based gameplay for energy harvesting. This work provides a reference implementation and framework for a future of battery-free mobile gaming in a more sustainable Internet of Things.},
  journal    = {Proc. ACM Interact. Mob. Wearable Ubiquitous Technol.},
  month      = {sep},
  articleno  = {111},
  numpages   = {34},
  keywords   = {Battery-free, Energy Harvesting, Intermittent Computing}
}



@article{gollakota_2014,
  author  = {Gollakota, Shyamnath and Reynolds, Matthew S. and Smith, Joshua R. and Wetherall, David J.},
  journal = {Computer},
  title   = {The Emergence of RF-Powered Computing},
  year    = {2014},
  volume  = {47},
  number  = {1},
  pages   = {32-39},
  doi     = {10.1109/MC.2013.404}
}


@inproceedings{hester_2017,
  author    = {Hester, Josiah and Sorber, Jacob},
  title     = {The Future of Sensing is Batteryless, Intermittent, and Awesome},
  year      = {2017},
  isbn      = {9781450354592},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi-org.tudelft.idm.oclc.org/10.1145/3131672.3131699},
  doi       = {10.1145/3131672.3131699},
  abstract  = {Sensing has been obsessed with delivering on the "smart dust" vision outlined decades ago, where trillions of tiny invisible computers support daily life, infrastructure, and humanity in general. Batteries are the single greatest threat to this vision of a sustainable Internet of Things. They are expensive, bulky, hazardous, and wear out after a few years (even rechargeables). Replacing and disposing of billions or trillions of dead batteries per year would be expensive and irresponsible. By leaving the batteries behind and surviving off energy harvested from the environment, tiny intermittently powered computers can monitor objects in hard to reach places maintenance free for decades. The intermittent execution, constrained compute and energy resources, and unreliability of these devices creates new challenges for the sensing and embedded systems community. However, the rewards and potential impact across many fields are worth it, enabling currently impractical applications in health services and patient care, commercial and consumer applications, wildlife conservation, industrial and infrastructure management, even space exploration. This paper highlights major research questions and establishes new directions for the community to embrace and investigate.},
  booktitle = {Proceedings of the 15th ACM Conference on Embedded Network Sensor Systems},
  articleno = {21},
  numpages  = {6},
  keywords  = {Sensing, Batteryless, Energy harvesting, Intermittent},
  location  = {Delft, Netherlands},
  series    = {SenSys '17}
}

@misc{marr_2018,
  author       = {{Marr, Bernard}},
  title        = {Smart Dust Is Coming. Are You Ready?},
  year         = {2018},
  howpublished = {\url{https://www.forbes.com/sites/bernardmarr/2018/09/16/smart-dust-is-coming-are-you-ready/?sh=39bf23d05e41}},
  note         = {Last accessed: August 31st, 2022}
}

@misc{microsoft_2019,
  author       = {{Microsoft}},
  title        = {2019 Manufacturing Trends Report},
  year         = {2019},
  howpublished = {\url{https://info.microsoft.com/rs/157-GQE-382/images/EN-US-CNTNT-Report-2019-Manufacturing-Trends.pdf}},
  note         = {Last accessed: August 31st, 2022}
}

@misc{nordic_2022,
  author       = {{Nordic Semiconductor}},
  title        = {Building a Bluetooth application on nRF Connect SDK - Part 3 Optimizing the connection},
  year         = {2022},
  howpublished = {\url{https://devzone.nordicsemi.com/guides/nrf-connect-sdk-guides/b/software/posts/building-a-bluetooth-application-on-nrf-connect-sdk-part-3-optimizing-the-connection}},
  note         = {Last accessed: September 1st, 2022}
} 

@misc{nordic_softdevices,
  author  = {{Nordic Semiconductor}},
  title   = {SoftDevices},
  url     = {https://infocenter.nordicsemi.com/index.jsp?topic=%2Fug_gsg_ses%2FUG%2Fgsg%2Fsoftdevices.html},
  journal = {Nordic Semiconductor Infocenter}
}

@inproceedings{satya_2019,
  author    = {Satyanarayanan, Mahadev and Gao, Wei and Lucia, Brandon},
  title     = {The Computing Landscape of the 21st Century},
  year      = {2019},
  isbn      = {9781450362733},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi-org.tudelft.idm.oclc.org/10.1145/3301293.3302357},
  doi       = {10.1145/3301293.3302357},
  abstract  = {This paper shows how today's complex computing landscape can be understood in simple terms through a 4-tier model. Each tier represents a distinct and stable set of design constraints that dominate attention at that tier. There are typically many alternative implementations of hardware and software at each tier, but all of them are subject to the same set of design constraints. We discuss how this simple and compact framework has explanatory power and predictive value in reasoning about system design.},
  booktitle = {Proceedings of the 20th International Workshop on Mobile Computing Systems and Applications},
  pages     = {45–50},
  numpages  = {6},
  keywords  = {energy, energy harvesting, system design, periodic table, cloud computing, architecture, quantum computing, distributed systems, fog computing, rfid tags, biological computing, edge computing, sensor networks, mobile computing},
  location  = {Santa Cruz, CA, USA},
  series    = {HotMobile '19}
} 

 @misc{ti_ble_dev_guide,
  author  = {{Texas Instruments}},
  title   = {TI Documentation for the BLE Protocol Stack},
  url     = {https://software-dl.ti.com/lprf/simplelink_cc2640r2_sdk/1.00.00.22/exports/docs/blestack/html/ble-stack/index.html},
  journal = {Bluetooth Low Energy Protocol Stack - Bluetooth Low Energy Software Developer's Guide 3.00.00 documentation}
} 

@book{townsend_cufi,
  title     = {Getting started with Bluetooth Low Energy},
  publisher = {SPD},
  author    = {Townsend, Kevin and Cufi Carles and Akiba and Davidson, Robert},
  year      = {2015}
}

@article{wisp_2005,
  author  = {Philipose, M. and Smith, J.R. and Jiang, B. and Mamishev, A. and Sumit Roy and Sundara-Rajan, K.},
  journal = {IEEE Pervasive Computing},
  title   = {Battery-free wireless identification and sensing},
  year    = {2005},
  volume  = {4},
  number  = {1},
  pages   = {37-45},
  doi     = {10.1109/MPRV.2005.7}
}